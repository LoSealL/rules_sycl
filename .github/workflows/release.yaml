# Cut a release whenever a new tag is pushed to the repo.
# You should use an annotated tag, like `git tag -a v1.2.3`
# and put the release notes into the commit message for the tag.
name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        os:
          - ubuntu-22.04
        sycl-version:
          - "2025.1"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: bazelbuild/setup-bazelisk@v3
      - name: Mount bazel cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/bazel
          key: bazel-${{ matrix.os }}-sycl-${{ matrix.sycl-version }}-${{ hashFiles('.bazelversion') }}
      - name: Create rules archive
        run: |
          PREFIX="rules_sycl-${GITHUB_REF_NAME}"
          git archive --format=tar.gz --prefix=${PREFIX}/ ${GITHUB_REF_NAME} -o ${{ github.workspace }}/.github/rules_sycl.tar.gz
          echo "ARCHIVE_SHA256=$(shasum -a 256 ${{ github.workspace }}/.github/rules_sycl.tar.gz | cut -d ' ' -f 1)" >> $GITHUB_ENV
          echo "RELEASE_VERSION=${GITHUB_REF_NAME}" >> $GITHUB_ENV
      # Upload the artifact in case creating a release fails so all artifacts can then be manually recovered.
      - uses: actions/upload-artifact@v4
        with:
          name: "rules_sycl.tar.gz"
          path: ${{ github.workspace }}/.github/rules_sycl.tar.gz
          if-no-files-found: error
      - name: Prepare workspace snippet
        run: |
          sed 's/{version}/${{ env.RELEASE_VERSION }}/g' ${{ github.workspace }}/.github/release_notes.template \
          | sed 's/{archive_sha256}/${{ env.ARCHIVE_SHA256 }}/g' \
          > ${{ github.workspace }}/.github/release_notes.txt
      - name: Create the release
        uses: softprops/action-gh-release@v2
        id: rules_sycl_release
        with:
          prerelease: true
          # Use GH feature to populate the changelog automatically
          generate_release_notes: true
          body_path: ${{ github.workspace }}/.github/release_notes.txt
      - name: "Upload the rules archive"
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.rules_sycl_release.outputs.upload_url }}
          asset_name: rules_sycl-${{ env.RELEASE_VERSION }}.tar.gz
          asset_path: ${{ github.workspace }}/.github/rules_sycl.tar.gz
          asset_content_type: application/gzip
